blueprint:
  name: Light or Switch Control by Door Sensor (with Delay)
  description: >
    Turns a light or switch ON when the door opens (after optional delay), and OFF when the door closes.
    Prevents blinking if the door closes quickly.
  domain: automation
  input:
    door_sensor:
      name: Door Sensor
      description: A binary sensor that reports 'on' when open and 'off' when closed.
      selector:
        entity:
          domain: binary_sensor

    target_entity:
      name: Light or Switch
      description: The light or switch to control.
      selector:
        entity:
          filter:
            - domain: light
            - domain: switch

    delay_seconds:
      name: Delay Before Turning On
      description: >
        Number of seconds to wait after the door opens before turning on the light/switch.
        If the door closes during this delay, the light will not be turned on.
      default: 0
      selector:
        number:
          min: 0
          max: 60
          step: 1
          unit_of_measurement: seconds
          mode: slider

trigger:
  - platform: state
    entity_id: !input door_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input door_sensor
    from: 'on'
    to: 'off'

action:
  - variables:
      entity: !input target_entity
      domain: "{{ entity.split('.')[0] }}"
      new_state: "{{ trigger.to_state.state }}"
      delay_time: !input delay_seconds

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ new_state == 'on' }}"
        sequence:
          - wait_for_trigger:
              - platform: state
                entity_id: !input door_sensor
                to: 'off'
            timeout: "{{ delay_time }}"
          - condition: template
            value_template: "{{ not wait.trigger }}"
          - service: "{{ domain }}.turn_on"
            target:
              entity_id: "{{ entity }}"

      - conditions:
          - condition: template
            value_template: "{{ new_state == 'off' }}"
        sequence:
          - service: "{{ domain }}.turn_off"
            target:
              entity_id: "{{ entity }}"

mode: restart
