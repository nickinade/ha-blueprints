blueprint:
  name: Light or Switch Control by Door Sensor
  description: >
    Turn a light or switch ON when the door opens and OFF when the door closes.
  domain: automation
  input:
    door_sensor:
      name: Door Sensor
      description: Binary sensor that detects door open/close state
      selector:
        entity:
          domain: binary_sensor
    target_entity:
      name: Light or Switch
      description: Light or switch to control
      selector:
        entity:
          filter:
            - domain: light
            - domain: switch

trigger:
  - platform: state
    entity_id: !input door_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input door_sensor
    from: 'on'
    to: 'off'

variables:
  entity_to_control: !input target_entity

action:
  - choose:
      - conditions:
          - condition: state
            entity_id: !input door_sensor
            state: 'on'
        sequence:
          - service: >
              {% if entity_to_control.startswith('light.') %}
                light.turn_on
              {% elif entity_to_control.startswith('switch.') %}
                switch.turn_on
              {% else %}
                homeassistant.turn_on
              {% endif %}
            data:
              entity_id: "{{ entity_to_control }}"
      - conditions:
          - condition: state
            entity_id: !input door_sensor
            state: 'off'
        sequence:
          - service: >
              {% if entity_to_control.startswith('light.') %}
                light.turn_off
              {% elif entity_to_control.startswith('switch.') %}
                switch.turn_off
              {% else %}
                homeassistant.turn_off
              {% endif %}
            data:
              entity_id: "{{ entity_to_control }}"

mode: restart
