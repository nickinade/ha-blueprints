blueprint:
  name: Light or Switch Control by Door Sensor
  description: >
    Turn a light or switch ON when the door opens and OFF when the door closes.
  domain: automation
  input:
    door_sensor:
      name: Door Sensor
      selector:
        entity:
          domain: binary_sensor
    target_entity:
      name: Light or Switch
      selector:
        entity:
          filter:
            - domain: light
            - domain: switch

trigger:
  - platform: state
    entity_id: !input door_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input door_sensor
    from: 'on'
    to: 'off'

action:
  - variables:
      target: !input target_entity
      domain: "{{ target.split('.')[0] }}"
      service: >
        {{ domain }}.turn_{{ 'on' if is_state(blueprint.inputs.door_sensor, 'on') else 'off' }}
  - service: "{{ service }}"
    target:
      entity_id: "{{ target }}"

mode: restart
