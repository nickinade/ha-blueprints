blueprint:
  name: ZHA Scene Switch Handler (up to 6 buttons) v2.2
  description: Handle ZHA scene switch button presses (supports up to 6 buttons with multiple press types). Condition removed for debugging.
  domain: automation
  input:
    target_device:
      name: Zigbee Scene Switch
      description: Select your ZHA scene switch
      selector:
        device:
          integration: zha

    button1_command:
      name: Button 1 Command
      description: Select press type for Button 1
      default: remote_button_short_press
      selector:
        select:
          options:
            - remote_button_short_press
            - remote_button_long_press
            - remote_button_double_press
    button1_action:
      name: Button 1 Action
      description: Action to run when Button 1 is pressed
      default: []
      selector:
        action: {}

    button2_command:
      name: Button 2 Command
      default: remote_button_short_press
      selector:
        select:
          options:
            - remote_button_short_press
            - remote_button_long_press
            - remote_button_double_press
    button2_action:
      name: Button 2 Action
      default: []
      selector:
        action: {}

    button3_command:
      name: Button 3 Command
      default: remote_button_short_press
      selector:
        select:
          options:
            - remote_button_short_press
            - remote_button_long_press
            - remote_button_double_press
    button3_action:
      name: Button 3 Action
      default: []
      selector:
        action: {}

    button4_command:
      name: Button 4 Command
      default: remote_button_short_press
      selector:
        select:
          options:
            - remote_button_short_press
            - remote_button_long_press
            - remote_button_double_press
    button4_action:
      name: Button 4 Action
      default: []
      selector:
        action: {}

    button5_command:
      name: Button 5 Command
      default: remote_button_short_press
      selector:
        select:
          options:
            - remote_button_short_press
            - remote_button_long_press
            - remote_button_double_press
    button5_action:
      name: Button 5 Action
      default: []
      selector:
        action: {}

    button6_command:
      name: Button 6 Command
      default: remote_button_short_press
      selector:
        select:
          options:
            - remote_button_short_press
            - remote_button_long_press
            - remote_button_double_press
    button6_action:
      name: Button 6 Action
      default: []
      selector:
        action: {}

mode: restart

trigger:
  - platform: event
    event_type: zha_event

condition: []

action:
  - service: persistent_notification.create
    data:
      title: "Debug ZHA Event and Device Attributes"
      message: >
        event.device_ieee raw: {{ trigger.event.data.device_ieee | string }}
        event.device_ieee normalized: {{ trigger.event.data.device_ieee | replace(":", "") | lower }}
        blueprint.ieee raw: {{ state_attr(blueprint.inputs.target_device.entity_id, 'ieee') | string }}
        blueprint.ieee normalized: {{ state_attr(blueprint.inputs.target_device.entity_id, 'ieee') | replace(":", "") | lower }}
        endpoint_id: {{ trigger.event.data.endpoint_id | string }}
        cluster_id: {{ trigger.event.data.cluster_id | string }}
        command: {{ trigger.event.data.command | string }}
        args: {{ trigger.event.data.args | string }}

  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% if trigger is defined and trigger.event is defined %}
                {{ trigger.event.data.endpoint_id == 1 and
                   trigger.event.data.command == blueprint.inputs.button1_command }}
              {% else %}
                false
              {% endif %}
        sequence: !input button1_action

      - conditions:
          - condition: template
            value_template: >
              {% if trigger is defined and trigger.event is defined %}
                {{ trigger.event.data.endpoint_id == 2 and
                   trigger.event.data.command == blueprint.inputs.button2_command }}
              {% else %}
                false
              {% endif %}
        sequence: !input button2_action

      - conditions:
          - condition: template
            value_template: >
              {% if trigger is defined and trigger.event is defined %}
                {{ trigger.event.data.endpoint_id == 3 and
                   trigger.event.data.command == blueprint.inputs.button3_command }}
              {% else %}
                false
              {% endif %}
        sequence: !input button3_action

      - conditions:
          - condition: template
            value_template: >
              {% if trigger is defined and trigger.event is defined %}
                {{ trigger.event.data.endpoint_id == 4 and
                   trigger.event.data.command == blueprint.inputs.button4_command }}
              {% else %}
                false
              {% endif %}
        sequence: !input button4_action

      - conditions:
          - condition: template
            value_template: >
              {% if trigger is defined and trigger.event is defined %}
                {{ trigger.event.data.endpoint_id == 5 and
                   trigger.event.data.command == blueprint.inputs.button5_command }}
              {% else %}
                false
              {% endif %}
        sequence: !input button5_action

      - conditions:
          - condition: template
            value_template: >
              {% if trigger is defined and trigger.event is defined %}
                {{ trigger.event.data.endpoint_id == 6 and
                   trigger.event.data.command == blueprint.inputs.button6_command }}
              {% else %}
                false
              {% endif %}
        sequence: !input button6_action
